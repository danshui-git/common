
name: 'My Composite Action'
description: 'Deletes old GitHub Actions runs artifacts, keeping a specified number of the most recent ones'

branding:
  icon: "terminal"
  color: "gray-dark"

inputs:
  runs_to_keep:
    description: "Number of latest runs to keep"
    required: true
    default: "6"
  fetch_limit:
    description: "Maximum number of runs to fetch in one query"
    required: true
    default: "500"
  github_token:
    description: "GitHub token for authentication"
    required: true
    default: "${{ github.token }}"

runs:
  using: "composite"
  steps:
    - name: "Set up environment"
      shell: bash
      run: |
        RUNS_TO_KEEP=${{ inputs.runs_to_keep }}
        echo "RUNS_TO_KEEP=${RUNS_TO_KEEP}" >> $GITHUB_ENV
        FETCH_LIMIT=${{ inputs.fetch_limit }}
        echo "FETCH_LIMIT=${FETCH_LIMIT}" >> $GITHUB_ENV

    - name: "Authenticate with GitHub CLI"
      shell: bash
      run: |
        unset GITHUB_TOKEN
        echo "${{ inputs.github_token }}" > token.txt
        gh auth login --with-token < token.txt
        rm token.txt

    - name: "Fetch all workflow runs"
      shell: bash
      id: fetch_runs
      run: |
        RUNS=$(gh run list --status completed --status failure --status success --status cancelled --limit ${{ env.FETCH_LIMIT }} --json databaseId,createdAt)
        echo "RUNS=${RUNS}" >> $GITHUB_ENV

        if [ -z "$RUNS" ] || [ "$RUNS" = "[]" ]; then
          echo "No runs found, nothing to do"
          exit 0
        fi

        RUN_COUNT=$(echo "$RUNS" | jq length)
        echo "RUN_COUNT=${RUN_COUNT}" >> $GITHUB_ENV

        if [ "$RUN_COUNT" -le ${{ env.RUNS_TO_KEEP }} ]; then
          echo "Number of runs within retention limit, nothing to do"
          exit 0
        fi

    - name: "Filter and delete old artifacts"
      shell: bash
      run: |
        echo "${{ env.RUNS }}" | jq -r ".[${{ env.RUNS_TO_KEEP }}:][].databaseId" | while read RUN_ID; do
          echo "Deleting run ID: $RUN_ID"
          gh run delete $RUN_ID --confirm
        done
