name: 'Clean Old Workflow Runs'
description: 'Deletes old GitHub Actions runs keeping specified number of recent ones'

branding:
  icon: "trash"
  color: "gray-dark"

inputs:
  runs_to_keep:
    description: "Number of latest runs to keep"
    required: true
    default: "20"  # 默认保留20个，可被调用时覆盖
  fetch_limit:
    description: "Maximum number of runs to fetch"
    required: true
    default: "500"
  github_token:
    description: "GitHub token for authentication"
    required: true
    default: "${{ github.token }}"

runs:
  using: "composite"
  steps:
    - name: "Set up environment"
      shell: bash
      run: |
        RUNS_TO_KEEP="${{ inputs.runs_to_keep }}"  # 从输入获取值
        echo "RUNS_TO_KEEP=${RUNS_TO_KEEP}" >> $GITHUB_ENV
        FETCH_LIMIT="${{ inputs.fetch_limit }}"
        echo "FETCH_LIMIT=${FETCH_LIMIT}" >> $GITHUB_ENV

    - name: "Authenticate GitHub CLI"
      shell: bash
      run: |
        echo "${{ inputs.github_token }}" | gh auth login --with-token
        echo "认证成功"  # 可选：显示认证成功信息

    - name: "Fetch workflow runs"
      shell: bash
      id: fetch_runs
      run: |
        RUNS_JSON=$(gh run list --status completed --status failure --status success --status cancelled --limit $FETCH_LIMIT --json databaseId,createdAt)
        echo "Fetched runs JSON: $RUNS_JSON"  # 调试输出
        if [ -z "$RUNS_JSON" ]; then
          echo "No runs found, nothing to delete."
          exit 0
        fi
        RUN_COUNT=$(echo "$RUNS_JSON" | jq length)
        echo "RUN_COUNT=${RUN_COUNT}" >> $GITHUB_ENV
        if [ "$RUN_COUNT" -le "$RUNS_TO_KEEP" ]; then
          echo "现有 $RUN_COUNT 个运行记录，保留 $RUNS_TO_KEEP 个，无需删除"
          exit 0
        fi
        echo "runs_to_delete=true" >> $GITHUB_OUTPUT

    - name: "Delete old runs"  # 注意：这里需要和上面的 steps 保持相同缩进（之前缺少缩进）
      shell: bash
      if: steps.fetch_runs.outputs.runs_to_delete == 'true'
      run: |
        echo "调试信息："
        echo "RUNS_TO_KEEP 值: $RUNS_TO_KEEP"  # 确认变量值
        echo "RUNS_JSON 长度: $(echo "$RUNS_JSON" | jq length)"  # 确认 JSON 长度
        
        # 调试 jq 命令，输出结果
        echo "执行 jq 命令前的原始 JSON:"
        echo "$RUNS_JSON" | jq .
        
        # 保存 jq 结果到临时文件，方便查看
        echo "$RUNS_JSON" | jq --arg keep "$RUNS_TO_KEEP" -r '.[($keep|tonumber):][].databaseId' > runs_to_delete.txt
        
        # 检查结果
        if [ -s runs_to_delete.txt ]; then
          echo "待删除的记录（ID）:"
          cat runs_to_delete.txt
          # 实际执行删除
          while read RUN_ID; do
            echo "Deleting run ID: $RUN_ID"
            gh run delete "$RUN_ID" --yes
          done < runs_to_delete.txt
        else
          echo "jq 命令返回空结果，没有需要删除的记录"
          echo "可能原因：RUNS_TO_KEEP 值过大（超过总记录数）"
          exit 0
        fi
