name: 'Clean Old Workflow Runs'
description: 'Deletes old GitHub Actions runs keeping specified number of recent ones'

branding:
  icon: "trash"
  color: "gray-dark"

inputs:
  runs_to_keep:
    description: "Number of latest runs to keep"
    required: true
    default: "6"
  fetch_limit:
    description: "Maximum number of runs to fetch"
    required: true
    default: "500"
  github_token:
    description: "GitHub token for authentication"
    required: true
    default: "${{ github.token }}"

runs:
  using: "composite"
  steps:
    - name: "Set up environment"
      shell: bash
      run: |
        RUNS_TO_KEEP=${{ inputs.runs_to_keep }}
        echo "RUNS_TO_KEEP=${RUNS_TO_KEEP}" >> $GITHUB_ENV
        FETCH_LIMIT=${{ inputs.fetch_limit }}
        echo "FETCH_LIMIT=${FETCH_LIMIT}" >> $GITHUB_ENV

    - name: "Authenticate GitHub CLI"
      shell: bash
      run: |
        echo "${{ inputs.github_token }}" | gh auth login --with-token

    - name: "Fetch workflow runs"
      shell: bash
      id: fetch_runs
      run: |
        RUNS_JSON=$(gh run list --status completed --status failure --status success --status cancelled --limit ${{ env.FETCH_LIMIT }} --json databaseId,createdAt)
        echo "Fetched runs JSON: $RUNS_JSON"  # Debugging output
        if [ -z "$RUNS_JSON" ]; then
          echo "No runs found, nothing to delete."
          exit 0
        fi
        RUN_COUNT=$(echo "$RUNS_JSON" | jq length)
        echo "RUN_COUNT=${RUN_COUNT}" >> $GITHUB_ENV
        if [ "$RUN_COUNT" -le $RUNS_TO_KEEP ]; then
          echo "No runs to delete"
          exit 0
        fi

    - name: "Delete old runs"
      shell: bash
      run: |
        RUNS_TO_DELETE=$(echo "$RUNS_JSON" | jq --argjson keep $RUNS_TO_KEEP -r '.[$keep:][].databaseId')
        if [ -z "$RUNS_TO_DELETE" ]; then
          echo "No runs to delete"
          exit 0
        fi
        echo "$RUNS_TO_DELETE" | while read RUN_ID; do
          echo "Deleting run ID: $RUN_ID"
          gh run delete "$RUN_ID" --confirm
        done
